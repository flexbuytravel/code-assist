// Firestore Security Rules for FlexBuy Travel

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =========================
    // USER DOCUMENTS
    // =========================
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.token.role == 'admin' ||
        request.auth.uid == userId
      );

      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId || request.auth.token.role == 'admin';
      allow delete: if request.auth.token.role == 'admin';
    }

    // =========================
    // COMPANIES
    // =========================
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.token.role == 'admin';
    }

    // =========================
    // AGENTS
    // =========================
    match /companies/{companyId}/agents/{agentId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.token.role == 'company' &&
        request.auth.token.companyId == companyId;
    }

    // =========================
    // PACKAGES
    // =========================
    match /companies/{companyId}/packages/{packageId} {
      allow read: if request.auth != null;

      // Agents of the company can create packages
      allow create: if request.auth.token.role == 'agent' &&
        request.auth.token.companyId == companyId;

      // Update rules
      allow update: if (
        // Agent of company can update before it's claimed
        (request.auth.token.role == 'agent' &&
         request.auth.token.companyId == companyId &&
         !resource.data.claimed) ||

        // Only Stripe webhook (server) can mark deposit/full paid
        (request.auth.token.role == 'server') ||

        // Admin can override
        request.auth.token.role == 'admin'
      );

      // Delete only by admin or company
      allow delete: if request.auth.token.role in ['admin', 'company'] &&
        request.auth.token.companyId == companyId;
    }

    // =========================
    // CLAIMED PACKAGES (Customer Flow)
    // =========================
    match /customers/{customerId}/claimedPackages/{packageId} {
      allow read: if request.auth != null && request.auth.uid == customerId;

      // Only server (Stripe webhook) can create after payment
      allow create: if request.auth.token.role == 'server';

      // Customer cannot update claimed status manually
      allow update: if false;

      // Delete by admin only
      allow delete: if request.auth.token.role == 'admin';
    }
  }
}