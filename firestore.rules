rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =========================
    // AUTH REQUIRED FOR ALL DATA
    // =========================
    match /{document=**} {
      allow read, write: if false; // deny all by default
    }

    // =========================
    // CUSTOMERS
    // =========================
    match /customers/{customerId} {
      // Customer can read their own data
      allow read: if request.auth != null && request.auth.uid == customerId;

      // Customer can update their own non-sensitive fields (NOT depositPaid or expiresAt)
      allow update: if request.auth != null &&
                    request.auth.uid == customerId &&
                    !("depositPaid" in request.resource.data.diff(resource.data).affectedKeys()) &&
                    !("expiresAt" in request.resource.data.diff(resource.data).affectedKeys());

      // Allow server/webhook to mark depositPaid + extend expiry
      allow update: if request.auth == null && request.time < timestamp.date(2100,1,1); // webhook unauthenticated call

      // Prevent create from outside authenticated registration flow
      allow create: if request.auth != null && request.auth.uid == customerId;

      // No deletes from client
      allow delete: if false;
    }

    // =========================
    // PACKAGES
    // =========================
    match /packages/{packageId} {
      // Anyone logged in can read package data
      allow read: if request.auth != null;

      // Only the assigned agent or company can update basic details
      allow update: if request.auth != null &&
                    (
                      request.auth.token.role == 'agent' ||
                      request.auth.token.role == 'company'
                    ) &&
                    !("depositPaid" in request.resource.data.diff(resource.data).affectedKeys());

      // Only webhook/server updates depositPaid
      allow update: if request.auth == null && request.time < timestamp.date(2100,1,1);

      // Agents or companies can create packages they own
      allow create: if request.auth != null &&
                    (request.auth.token.role == 'agent' || request.auth.token.role == 'company');

      // No deletes from client
      allow delete: if false;
    }

    // =========================
    // COMPANIES
    // =========================
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.token.role == 'admin';
      allow update: if request.auth != null && request.auth.token.role == 'admin';
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // =========================
    // AGENTS
    // =========================
    match /agents/{agentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.token.role == 'company';
      allow update: if request.auth != null && request.auth.token.role == 'company';
      allow delete: if request.auth != null && request.auth.token.role == 'company';
    }

    // =========================
    // ADMINS
    // =========================
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.token.role == 'admin';
      allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }
  }
}