// firestore.rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =====================
    // USERS COLLECTION
    // =====================
    match /users/{userId} {
      allow read: if isAdmin() || isSelf(userId);
      allow write: if isAdmin();
    }

    // =====================
    // COMPANIES COLLECTION
    // =====================
    match /companies/{companyId} {
      allow read: if isAdmin() || isCompanySelf(companyId);
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // =====================
    // AGENTS COLLECTION
    // =====================
    match /agents/{agentId} {
      allow read: if isAdmin() || isAgentSelf(agentId) || companyOwnsAgent(agentId);
      allow create: if isCompany();
      allow update, delete: if isCompany() && companyOwnsAgent(agentId);
    }

    // =====================
    // PACKAGES COLLECTION
    // =====================
    match /packages/{packageId} {
      allow read: if isAdmin() || companyOwnsPackage(packageId) || agentOwnsPackage(packageId);
      allow create: if isAgent();
      allow update, delete: if isAgent() && agentOwnsPackage(packageId);
    }

    // =====================
    // CUSTOMER-PACKAGE CLAIMS
    // =====================
    match /claims/{claimId} {
      allow read, create: if isCustomerSelfClaim(claimId);
      allow update: if false; // No updates after claim
    }

    // =====================
    // FUNCTIONS
    // =====================
    function isAdmin() {
      return request.auth.token.role == "admin";
    }
    function isCompany() {
      return request.auth.token.role == "company";
    }
    function isAgent() {
      return request.auth.token.role == "agent";
    }
    function isCustomer() {
      return request.auth.token.role == "customer";
    }

    function isSelf(uid) {
      return request.auth.uid == uid;
    }

    function isCompanySelf(companyId) {
      return isCompany() && request.auth.uid == companyId;
    }

    function isAgentSelf(agentId) {
      return isAgent() && request.auth.uid == agentId;
    }

    function companyOwnsAgent(agentId) {
      return exists(/databases/$(database)/documents/agents/$(agentId))
        && get(/databases/$(database)/documents/agents/$(agentId)).data.companyId == request.auth.uid;
    }

    function companyOwnsPackage(packageId) {
      return exists(/databases/$(database)/documents/packages/$(packageId))
        && get(/databases/$(database)/documents/packages/$(packageId)).data.companyId == request.auth.uid;
    }

    function agentOwnsPackage(packageId) {
      return exists(/databases/$(database)/documents/packages/$(packageId))
        && get(/databases/$(database)/documents/packages/$(packageId)).data.agentId == request.auth.uid;
    }

    function isCustomerSelfClaim(claimId) {
      return isCustomer() && request.auth.uid == claimId;
    }
  }
}