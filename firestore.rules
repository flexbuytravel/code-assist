// Firestore security rules for FlexBuyTravel

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow read for all authenticated users
    match /{document=**} {
      allow read: if request.auth != null;
    }

    // ADMIN access
    match /admins/{adminId} {
      allow read, write: if request.auth.token.role == "admin";
    }

    // COMPANIES
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == "admin";
    }

    // AGENTS
    match /agents/{agentId} {
      allow read: if request.auth != null;
      allow create, update, delete:
        if request.auth.token.role == "company";
    }

    // PACKAGES
    match /packages/{packageId} {
      allow read: if request.auth != null;

      // Company or Agent that owns the package can write
      allow write: if (
        request.auth.token.role == "company" ||
        request.auth.token.role == "agent"
      );
    }

    // CUSTOMERS
    match /customers/{customerId} {
      allow read: if request.auth != null && request.auth.uid == customerId;

      // Customers can only update certain fields when registering
      allow update: if request.auth.uid == customerId &&
        (
          // Allow updating contact details
          (request.resource.data.keys().hasOnly(['name', 'phone', 'address', 'email']) &&
           !('depositPaid' in request.resource.data) &&
           !('fullyPaid' in request.resource.data) &&
           !('expiresAt' in request.resource.data) &&
           !('lastPaymentAt' in request.resource.data) &&
           !('insurance' in request.resource.data))
        );
    }

    // Only backend (Cloud Functions or Webhook) can set payment flags
    match /customers/{customerId} {
      allow update: if request.auth.token.isStripeWebhook == true;
    }
  }
}