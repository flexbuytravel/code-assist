rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =========================
    // USERS
    // =========================
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Sign-up
      allow update: if request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // =========================
    // COMPANIES
    // =========================
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // =========================
    // AGENTS
    // =========================
    match /agents/{agentId} {
      allow read: if request.auth != null;
      allow create: if isCompany() && request.resource.data.companyId == getUserCompanyId();
      allow update, delete: if isCompany() && resource.data.companyId == getUserCompanyId();
    }

    // =========================
    // PACKAGES
    // =========================
    match /packages/{packageId} {
      allow read: if request.auth != null;

      // CREATE: Only agent of that company
      allow create: if isAgent() &&
        request.resource.data.companyId == getUserCompanyId() &&
        request.resource.data.agentId == request.auth.uid;

      // UPDATE: 
      // - Must own the package
      // - Must not be claimed (unless admin)
      // - Must not change immutable fields
      allow update: if (
        (
          isAgent() &&
          resource.data.companyId == getUserCompanyId() &&
          resource.data.agentId == request.auth.uid &&
          resource.data.claimed == false &&
          isImmutableFieldsUnchanged()
        )
        || isAdmin()
      );

      // DELETE: Admin or owning company
      allow delete: if (
        isCompany() && resource.data.companyId == getUserCompanyId()
      ) || isAdmin();
    }

    // =========================
    // HELPERS
    // =========================
    function isAdmin() {
      return request.auth.token.role == "admin";
    }

    function isCompany() {
      return request.auth.token.role == "company";
    }

    function isAgent() {
      return request.auth.token.role == "agent";
    }

    function getUserCompanyId() {
      return request.auth.token.companyId;
    }

    function isImmutableFieldsUnchanged() {
      return resource.data.companyId == request.resource.data.companyId &&
             resource.data.agentId == request.resource.data.agentId &&
             resource.data.referralCode == request.resource.data.referralCode &&
             resource.data.price == request.resource.data.price;
    }
  }
}