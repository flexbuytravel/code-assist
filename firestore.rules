rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- USERS & ROLES ---
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // --- CUSTOMERS ---
    match /customers/{customerId} {
      allow read, update: if request.auth != null && request.auth.uid == customerId && getUserRole() == "customer";
      allow create: if request.auth != null && getUserRole() == "customer";
    }

    // --- PACKAGES ---
    match /packages/{packageId} {
      // Admin can read/write all
      allow read, write: if isAdmin();

      // Company can read/write packages they own
      allow read, write: if isCompany() && resource.data.companyId == request.auth.uid;

      // Agent can read/write only their own packages
      allow read, write: if isAgent() && resource.data.agentId == request.auth.uid;

      // Customers can only read packages to claim
      allow read: if isCustomer();
    }

    // --- COMPANIES ---
    match /companies/{companyId} {
      allow read, write: if isAdmin();
      allow read: if isCompany() && request.auth.uid == companyId;
    }

    // --- AGENTS ---
    match /agents/{agentId} {
      allow read, write: if isCompany() && resource.data.companyId == request.auth.uid;
    }

    function getUserRole() {
      return request.auth.token.role;
    }

    function isAdmin() {
      return getUserRole() == "admin";
    }

    function isCompany() {
      return getUserRole() == "company";
    }

    function isAgent() {
      return getUserRole() == "agent";
    }

    function isCustomer() {
      return getUserRole() == "customer";
    }
  }
}