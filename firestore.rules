rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === USERS COLLECTION ===
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    // === COMPANIES COLLECTION ===
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // === AGENTS COLLECTION ===
    match /agents/{agentId} {
      allow read: if request.auth != null;
      allow create: if isCompany() && request.resource.data.companyId == getUserCompanyId();
      allow update, delete: if isCompany() && resource.data.companyId == getUserCompanyId();
    }

    // === PACKAGES COLLECTION ===
    match /packages/{packageId} {
      allow read: if request.auth != null;

      // Create: Agent can only create packages for their own company
      allow create: if isAgent() && request.resource.data.companyId == getUserCompanyId()
                    && request.resource.data.agentId == request.auth.uid;

      // Update: Only allowed before claim
      allow update: if (
        (isAgent() && resource.data.companyId == getUserCompanyId() && resource.data.claimed == false)
        || isCompany()
        || isAdmin()
      );

      // Delete: Only Admin or Company that owns the package
      allow delete: if (isCompany() && resource.data.companyId == getUserCompanyId()) || isAdmin();
    }

    // === HELPERS ===
    function isAdmin() {
      return request.auth.token.role == "admin";
    }

    function isCompany() {
      return request.auth.token.role == "company";
    }

    function isAgent() {
      return request.auth.token.role == "agent";
    }

    function getUserCompanyId() {
      return request.auth.token.companyId;
    }
  }
}